#!/bin/zsh
source acp_lib `basename $0`
declare -a available_keywords=("count" "getids" "csv" "delete")
if [[ -z $1 ]]; then; user_keyword="hugo"; else; user_keyword=$1; fi
if ! is_keyword_valid ${user_keyword} ${available_keywords[@]}; then; exit 0; fi

getids()
{
curl --silent --request GET --url "${acp_URL_JIRA3}screenscheme?startAt=0&maxResults=100" -u "${acp_AUTH}" -H "${acp_HA_JSON}" | jq -r '.values[] | select(.id != 1).id'
}

case $1 in
"count")
  getids | wc -l
  ;;
"getids")
  getids
  ;;
"csv")
  printf "id,name,description\n"
  curl --silent --request GET --url "${acp_URL_JIRA3}screenscheme?startAt=0&maxResults=100" -u "${acp_AUTH}" -H "${acp_HA_JSON}" | jq -r '.values[] | [ .id, .name, .description ] | @csv'
  ;;
"delete")
# https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-screen-schemes/#api-rest-api-3-screenscheme-screenschemeid-delete
  typeset -r deleteLogFile="ajcSS_DeleteLog_${acp_TS_DATE}T${acp_TS_TIME}.csv"
  if [ -z $2 ]; then
    print_command_usage $1 "(screenSchemeId | X)"
    exit
  fi
  typeset -a screenSchemeIds
  if [[ ${2:u} == "X" ]]; then
    screenSchemeIds=(`getids`)
  else
    screenSchemeIds=$2
  fi
  for screenSchemeId in ${screenSchemeIds}; do
    printf "%u," ${screenSchemeId} | tee -a ${deleteLogFile}
    http_response=`curl -i -s -X DELETE --url "${acp_URL_JIRA3}screenscheme/${screenSchemeId}" -u "${acp_AUTH}"` 
    http_return_code=$(echo $http_response | grep "^HTTP" | awk '{print $2}')
    if [ $http_return_code -eq 204 ]; then
      printf "deleted\n" | tee -a ${deleteLogFile}
      continue
    fi
    if [ $http_return_code -ge 400 ]; then
      json_error_response=`echo $http_response | grep -E "{\"errorMessages" | jq -r '.errorMessages[]'`
      printf "%u-%s\n" $http_return_code ${json_error_response} | tee -a ${deleteLogFile}
      continue
    fi
  done
  ;;
esac

